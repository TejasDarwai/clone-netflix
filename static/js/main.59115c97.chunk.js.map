{"version":3,"sources":["axios.js","Requests.js","Banner.js","Nav.js","Row.js","Footer.js","HomeScreen.js","Login.js","App.js","features/counter/counterAPI.js","features/counterSlice.js","app/store.js","serviceWorker.js","index.js"],"names":["instance","axios","create","baseURL","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","string","n","useState","movie","setMovie","useEffect","a","get","request","data","results","Math","floor","random","length","fetchData","className","style","backgroundImage","backdrop_path","backgroundSize","backgroundPosition","title","name","original_name","overview","substr","Nav","show","handleShow","transitionNavBar","window","scrollY","addEventListener","removeEventListener","src","alt","Row","fetchURL","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","console","log","map","onClick","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","error","handleClick","poster_path","id","videoId","opts","height","width","playerVars","autoplay","Footer","HomeScreen","Login","history","useHistory","handleOnClick","useCallback","push","type","placeholder","App","exact","path","fetchCount","amount","Promise","resolve","setTimeout","incrementAsync","createAsyncThunk","response","counterSlice","createSlice","initialState","value","status","reducers","increment","state","decrement","incrementByAmount","action","payload","extraReducers","builder","addCase","pending","fulfilled","actions","store","configureStore","reducer","counter","counterReducer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.59115c97.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    \r\n    baseURL : \"https://api.themoviedb.org/3\"\r\n});\r\n\r\n\r\nexport default instance;","const API_KEY = \"1946056b8ee8aacfd8fc70b563840dfa\";\r\n\r\nconst requests = {\r\n\tfetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n\tfetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_network=123`,\r\n\tfetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n\tfetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n\tfetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n\tfetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n\tfetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n\tfetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`\r\n};\r\n\r\n\r\nexport default requests;","import axios from './axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport './Banner.css'\r\nimport requests from './Requests';\r\n\r\nfunction Banner() {\r\n\r\n    const [movie,setMovie] = useState([]);\r\n\r\n    useEffect (() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(requests.fetchNetflixOriginals);\r\n            setMovie(\r\n                request.data.results[\r\n                    Math.floor(Math.random() * request.data.results.length - 1)\r\n                ]\r\n            );\r\n            return request; \r\n        }\r\n        fetchData();\r\n    }, [])\r\n    function truncate(string, n) {\r\n        return string?.length > n ? string.substr(0,n-1) + '...' : string;\r\n    }\r\n    return (\r\n        <header className=\"banner\"style={{backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path }\")`,\r\n        backgroundSize:\"cover\",\r\n        backgroundPosition:\"center center\"}} >\r\n            <div className=\"banner__contents\">\r\n                <h1 className=\"banner__title\">{movie?.title || movie?.name || movie?.original_name}</h1>\r\n                <div className=\"banner__buttons\">\r\n                    <button className=\"banner__button\">Play</button>\r\n                    <button className=\"banner__button\">My List</button>\r\n                </div>\r\n                <h1 className=\"banner__description\">{truncate(movie?.overview,150)}</h1>\r\n            </div>\r\n            <div className=\"banner__fadeBottom\"/>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React, { useEffect, useState } from 'react';\r\nimport \"./Nav.css\";\r\n\r\n\r\nfunction Nav() {\r\n    const [show, handleShow] = useState(false);\r\n\r\n    const transitionNavBar = () => {\r\n        if (window.scrollY > 100) {\r\n            handleShow(true);\r\n        } else {\r\n            handleShow(false)\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(()=> {\r\n        window.addEventListener(\"scroll\",transitionNavBar);\r\n        return () => window.removeEventListener(\"scroll\", transitionNavBar);\r\n    },[]);\r\n    return (\r\n        <div className={`nav ${show && `nav__black`}`}>\r\n            <div className=\"nav__contents\">\r\n               <img className=\"nav__logo\" src=\"http://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\" alt=\"Netflix Logo\" />\r\n               <img className=\"nav__avatar\" src=\"https://i1.wp.com/matrixstore.pk/wp-content/uploads/2021/04/DmBraqkXcAA1Yco.jpg?fit=318%2C316&ssl=1\" alt=\"Netflix Avatar\" />\r\n            </div>\r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Row.css'\r\nimport axios from './axios';\r\nimport YouTube from 'react-youtube';\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original\"\r\n\r\n\r\nfunction Row({title, fetchURL, isLargeRow = false}) {\r\n    const [movies, setMovies] = useState([]);\r\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        async function fetchData() {\r\n            const request = await axios.get(fetchURL);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, [fetchURL]); \r\n    console.log(movies);\r\n\r\n    const opts = {\r\n        height: \"390\",\r\n        width: \"99%\",\r\n        playerVars: {\r\n          autoplay: 1,\r\n        }\r\n      };\r\n\r\n      const handleClick = (movie) => {\r\n        if (trailerUrl) {\r\n            setTrailerUrl('');\r\n        }else {\r\n            movieTrailer(movie?.title || \"\")\r\n            .then(url => {\r\n              const urlParams = new URLSearchParams(new URL(url).search);\r\n              setTrailerUrl(urlParams.get('v'));\r\n\r\n            }).catch((error) => console.log(error));\r\n        }\r\n      \r\n      }\r\n\r\n\r\n      \r\n\r\n    return (\r\n        <div className=\"row\" >\r\n            <h2>{title}</h2>\r\n            \r\n            <div className=\"row__posters\">\r\n                {movies.map(movie => (\r\n                <img className={`row__poster ${isLargeRow && \"row__posterLarge\"}`} key={movie.id} onClick={()=>handleClick(movie)} src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} />\r\n            ))}\r\n            </div>\r\n            {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} /> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n","import React from 'react'\r\nimport './Footer.css'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div>\r\n            <div className=\"line\"></div>\r\n            <div className=\"footer__container\">\r\n                <div className=\"footer__content\">\r\n                    <div className =\"content__one\">\r\n                        <span>FAQ</span>\r\n                        <span>Investor Relations</span>\r\n                        <span>Privacy</span>\r\n                        <span>Speed Test</span>\r\n                    </div>\r\n                    <div className =\"content__one\">\r\n                        <span>Help Centre</span>\r\n                        <span>Jobs</span>\r\n                        <span>Cookie Preferences</span>\r\n                        <span>Legal Notices</span>\r\n                    </div>\r\n                    <div className =\"content__one\">\r\n                        <span>Account</span>\r\n                        <span>Ways to Watch</span>\r\n                        <span>Corporate Information</span>\r\n                        <span>Only on Netflix</span>\r\n                    </div>\r\n                    <div className =\"content__one\">\r\n                        <span>Media Centre</span>\r\n                        <span>Terms of Use</span>\r\n                        <span>Contact Us</span>\r\n                        \r\n                    </div>\r\n\r\n\r\n                </div>\r\n                <img className=\"footer__img\" src=\"https://download.logo.wine/logo/Netflix/Netflix-Logo.wine.png\"/>\r\n                <span className=\"name__span\">NETFLIX CLONE - TEJAS</span>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react';\r\nimport Banner from './Banner';\r\nimport \"./HomeScreen.css\";\r\nimport Nav from './Nav';\r\nimport requests from './Requests';\r\nimport Row from './Row';\r\nimport Footer from './Footer'\r\n\r\nfunction HomeScreen() {\r\n    return (\r\n        <div className=\"homepage\">\r\n            <Nav />\r\n            <Banner />\r\n            <Row title=\"NETFLIX ORIGINALS\" fetchURL={requests.fetchNetflixOriginals} isLargeRow />\r\n            <Row title=\"TRENDING NOW\" fetchURL={requests.fetchTrending} />\r\n            <Row title=\"TOP RATED\" fetchURL={requests.fetchTopRated} />\r\n            <Row title=\"COMEDY\" fetchURL={requests.fetchComedyMovies} />\r\n            <Row title=\"ROMANCE\" fetchURL={requests.fetchRomanceMovies} />\r\n            <Row title=\"ACTION\" fetchURL={requests.fetchActionMovies} />\r\n            <Row title=\"HORROR\" fetchURL={requests.fetchHorrorMovies} />\r\n            <Row title=\"DOCUMENTARIES\" fetchURL={requests.fetchDocumentaries} />\r\n            <Footer />\r\n             \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, {useCallback} from 'react'\r\nimport './Login.css'\r\nimport {useHistory} from 'react-router-dom';\r\n\r\nfunction Login() {\r\n    const history = useHistory();\r\n    const handleOnClick = useCallback(() => history.push('/clone-netflix/home'), [history]);\r\n    return (\r\n        <div className=\"login__container\">\r\n            <div className=\"login__head\">\r\n                <img className=\"login__head__logo\" src=\"http://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\"/>\r\n                <button onClick={handleOnClick} className=\"login__head__button\">Sign In</button>\r\n                <div className=\"login__gradient\"></div>\r\n                \r\n            </div>\r\n            <div className=\"login__content\">\r\n            <h1>Unlimited movies, TV shows and more.</h1>\r\n            <h2>Watch anywhere. Cancel anytime.</h2>\r\n            <h3>Ready to watch? Enter your email to create or restart your membership.</h3>\r\n            <div className=\"login__input\">\r\n                 <form>\r\n                    <input type=\"email\"placeholder=\"Email Address\"/>\r\n                    <button onClick={handleOnClick} className=\"login__getstarted\">Get Started</button>\r\n                </form>\r\n                          \r\n            </div>\r\n            </div>\r\n            \r\n            \r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from 'react';\nimport './App.css';\nimport HomeScreen from \"./HomeScreen\"\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\"\nimport Login from './Login';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      \n      <Router>\n        \n        <Switch>\n          <Route exact path=\"/clone-netflix/\">\n            <Login />\n          </Route>\n          <Route path=\"/clone-netflix/home/\">\n            <HomeScreen />\n          </Route>\n        </Switch>\n      </Router>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchCount } from './counter/counterAPI';\n\nconst initialState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount) => (dispatch, getState) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counterSlice';\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}